{
  "_args": [
    [
      {
        "raw": "env-cmd@^5.0.0",
        "scope": null,
        "escapedName": "env-cmd",
        "name": "env-cmd",
        "rawSpec": "^5.0.0",
        "spec": ">=5.0.0 <6.0.0",
        "type": "range"
      },
      "D:\\wangshuai\\aimeisijia\\node_modules\\sequelize"
    ]
  ],
  "_from": "env-cmd@>=5.0.0 <6.0.0",
  "_id": "env-cmd@5.1.0",
  "_inCache": true,
  "_location": "/env-cmd",
  "_nodeVersion": "7.7.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/env-cmd-5.1.0.tgz_1492533886747_0.7008279601577669"
  },
  "_npmUser": {
    "name": "toddbluhm",
    "email": "toddbluhm@gmail.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "env-cmd@^5.0.0",
    "scope": null,
    "escapedName": "env-cmd",
    "name": "env-cmd",
    "rawSpec": "^5.0.0",
    "spec": ">=5.0.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/sequelize"
  ],
  "_resolved": "https://registry.npmjs.org/env-cmd/-/env-cmd-5.1.0.tgz",
  "_shasum": "0236db393c3f033005204fcd0a92ee40723a9c9e",
  "_shrinkwrap": null,
  "_spec": "env-cmd@^5.0.0",
  "_where": "D:\\wangshuai\\aimeisijia\\node_modules\\sequelize",
  "author": {
    "name": "Todd Bluhm"
  },
  "bin": {
    "env-cmd": "bin/env-cmd.js"
  },
  "bugs": {
    "url": "https://github.com/toddbluhm/env-cmd/issues"
  },
  "contributors": [
    {
      "name": "Eric Lanehart",
      "email": "eric@pushred.co"
    },
    {
      "name": "Jon Scheiding",
      "email": "jonscheiding@gmail.com"
    },
    {
      "name": "serapath",
      "email": "dev@serapath.de",
      "url": "Alexander Praetorius"
    },
    {
      "name": "Anton Versal",
      "email": "ant.ver@gmail.com"
    }
  ],
  "dependencies": {
    "cross-spawn": "^5.0.1"
  },
  "description": "Executes a command using the envs in the provided env file",
  "devDependencies": {
    "better-assert": "^1.0.2",
    "coveralls": "^2.11.12",
    "istanbul": "^0.4.4",
    "mocha": "^3.0.2",
    "proxyquire": "^1.7.10",
    "sinon": "^2.0.0",
    "standard": "^10.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "0236db393c3f033005204fcd0a92ee40723a9c9e",
    "tarball": "https://registry.npmjs.org/env-cmd/-/env-cmd-5.1.0.tgz"
  },
  "gitHead": "51359195d95b799ac5d75d7ffe2ad17c5ab64bbf",
  "homepage": "https://github.com/toddbluhm/env-cmd#readme",
  "keywords": [
    "env",
    "cli",
    "command",
    "exec",
    "environment",
    "run"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "toddbluhm",
      "email": "toddbluhm@gmail.com"
    }
  ],
  "name": "env-cmd",
  "optionalDependencies": {},
  "readme": "[![Travis](https://img.shields.io/travis/toddbluhm/env-cmd.svg)](https://travis-ci.org/toddbluhm/env-cmd)\n[![Coveralls](https://img.shields.io/coveralls/toddbluhm/env-cmd.svg)](https://coveralls.io/github/toddbluhm/env-cmd)\n[![npm](https://img.shields.io/npm/v/env-cmd.svg?maxAge=86400)](https://www.npmjs.com/package/env-cmd)\n[![npm](https://img.shields.io/npm/dm/env-cmd.svg?maxAge=86400)](https://www.npmjs.com/package/env-cmd)\n[![npm](https://img.shields.io/npm/l/env-cmd.svg?maxAge=2592000)](https://www.npmjs.com/package/env-cmd)\n[![Standard - JavaScript Style Guide](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n\n# env-cmd\nA simple node program for executing commands using an environment from an env file.\n\n## Install\n`npm install env-cmd` or `npm install -g env-cmd`\n\n## Basic Usage\n\n**Environment file `./test/.env`**\n```\n# This is a comment\nENV1=THANKS\nENV2=FOR ALL\nENV3=THE FISH\n```\n\n**Package.json**\n```json\n{\n  \"scripts\": {\n    \"test\": \"env-cmd ./test/.env mocha -R spec\"\n  }\n}\n```\nor\n\n**Terminal**\n```sh\n./node_modules/.bin/env-cmd ./test/.env node index.js\n```\n\n## Advanced Usage\n\n### Fallback file usage\n\nYou can specify an `.env.local` (or any name) env file, add that to your `.gitignore` and use that in your local development environment. Then you can use a regular `.env` file in root directory with production configs that can get committed to a private/protected repo. When `env-cmd` cannot find the `.env.local` file it will fallback to looking for a regular `.env` file.\n\n**Environment file `./.env.local`**\n```\n# This is a comment\nENV1=THANKS\nENV2=FOR ALL\nENV3=THE FISH\n```\n**Fallback Environment file `./.env`**\n```\n# This can be used as an example fallback\nENV1=foo\nENV2=bar\nENV3=baz\nENV4=quux\nENV5=gorge\n```\n\n**Package.json**\nuses `./.env` as a fallback\n```json\n{\n  \"scripts\": {\n    \"test\": \"env-cmd ./.env.local mocha -R spec\"\n  }\n}\n```\nor\n\n**Terminal**\n```sh\n# uses ./.env as a fallback, because it can't find `./.env.local`\n./node_modules/.bin/env-cmd ./.env.local node index.js\n```\n\n### .rc file usage\n\nFor more complex projects, a `.env-cmdrc` file can be defined in the root directory and supports as many environments as you want. Instead of passing the path to a `.env` file to `env-cmd`, simply pass the name of the environment you want to use thats in your `.env-cmdrc` file.\n\n**.rc file `.env-cmdrc`**\n\n```json\n{\n  \"development\": {\n    \"ENV1\": \"Thanks\",\n    \"ENV2\": \"For All\"\n  },\n  \"production\": {\n    \"ENV1\": \"The Fish\"\n  }\n}\n```\n\n**Terminal**\n```sh\n./node_modules/.bin/env-cmd production node index.js\n```\n### --no-override option\n\nSometimes you want to set env variables from a file without overriding existing process env vars.\n\n**Terminal**\n```sh\nENV1=welcome ./node_modules/.bin/env-cmd --no-override ./test/.env node index.js\n```\n## Environment File Formats\n\nThese are the currently accepted environment file formats. If any other formats are desired please create an issue.\n- `key=value`\n- Key/value pairs as JSON\n- JavaScript file exporting an object\n- `.env-cmdrc` file (as valid json) in execution directory\n\n## Why\n\nBecause sometimes its just too cumbersome passing lots of environment variables to scripts. Its usually just easier to have a file with all the vars in them, especially for development and testing.\n\n**Do not commit sensitive environment data to a public git repo!**\n\n## Related Projects\n\n[`cross-env`](https://github.com/kentcdodds/cross-env) - Cross platform setting of environment scripts\n\n## Special Thanks\n\nSpecial thanks to [`cross-env`](https://github.com/kentcdodds/cross-env) for inspiration (use's the same `cross-spawn` lib underneath too).\n\n## Contributors\n\n- Eric Lanehart\n- Jon Scheiding\n- Alexander Praetorius\n- Anton Versal\n\n## Contributing Guide\nI welcome all pull requests. Please make sure you add appropriate test cases for any features added. Before opening a PR please make sure to run the following scripts:\n\n- `npm run lint` checks for code errors and formats according to [js-standard](https://github.com/feross/standard)\n- `npm test` make sure all tests pass\n- `npm run test-cover` make sure the coverage has not decreased from current master\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/toddbluhm/env-cmd.git"
  },
  "scripts": {
    "coveralls": "coveralls < coverage/lcov.info",
    "lint": "standard --fix",
    "test": "mocha",
    "test-cover": "istanbul cover node_modules/.bin/_mocha -- -R spec",
    "test-lint": "standard"
  },
  "version": "5.1.0"
}
